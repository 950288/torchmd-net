name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * 0" # Run every Sunday at 0:00

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022"] #["ubuntu-latest", "macos-latest", "macos-13", "windows-2022"]
        python-version: ["3.10"]

    defaults: # Needed for conda
      run:
        shell: bash -l {0}

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,defaults

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        if: runner.os == 'Windows'

      - name: Install OS-specific conda dependencies
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            conda install --file conda_deps_linux.txt
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            conda install --file conda_deps_osx.txt
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            conda install --file conda_deps_win.txt
          fi

      - name: Install testing packages
        run: conda install -y -c conda-forge flake8 pytest psutil

      - name: List the conda environment
        run: conda list

      - name: Patch missing symlink of library in OSX 13
        run: ln -s /Users/runner/miniconda3/envs/test/lib/libtorch_python.dylib /Users/runner/miniconda3/envs/test/lib/python3.10/site-packages/torch/lib/libtorch_python.dylib
        if: matrix.os == 'macos-13'

      - name: List libs in the Windows environment
        run: dir "C:/Miniconda/envs/test/libs"
        if: runner.os == 'Windows'

      - name: List libs in the Windows environment
        run: dir "C:/Miniconda/envs/test/lib/site-packages/torch/lib"
        if: runner.os == 'Windows'

      - name: List libs in the Windows environment
        run: dir "C:/Miniconda/envs/test/Library/lib"
        if: runner.os == 'Windows'

      - name: Build and install the package
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            export LIB="C:/Miniconda/envs/test/Library/lib"
            pip -vv install .
          else
            pip -vv install .
          fi
        env:
          CPU_ONLY: 1

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: pytest -v -s
        env:
          CPU_ONLY: 1
          OMP_PREFIX: ${{ runner.os == 'macOS' && '/Users/runner/miniconda3/envs/test' || '' }}

      - name: Test torchmd-train utility
        run: torchmd-train --help
